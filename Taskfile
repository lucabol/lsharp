#!/bin/bash

TARGETS="Hello"
TESTDIR="test"

CSBIN="csbin"
DBGDIR="debug"
 DBIN="dbin"
 RBIN="rbin"

function clean {    # Clean things
    rm -f $CSBIN/* $DBIN/* $RBIN/* $DBGDIR/*
}

function buildcs {    # Build CSharp

  mkdir -p $CSBIN

  for T in $TARGETS; do
    ./dotnet-csc "$TESTDIR/$T.cs" -out:"$CSBIN/$T.dll"
  done
}

function buildd {    # Build C in debug mode

  mkdir -p $DBIN

  for T in $TARGETS; do
    ./lcsc -g -o$DBIN/$T "$TESTDIR/$T.cs"
  done
}

function buildr {    # Build C in release mode

  mkdir -p $RBIN

  for T in $TARGETS; do
    ./lcsc -o$RBIN/$T "$TESTDIR/$T.cs"
  done
}

function buildall {  # Build all version
  clean

  buildcs
  buildd
  buildr
}
function runall {    # Runs something
  buildall

  for T in $TARGETS; do
    dotnet "$CSBIN/$T.dll"; echo $?
  done
  for T in $TARGETS; do
    "$DBIN/$T"; echo $?
  done
  for T in $TARGETS; do
    "$RBIN/$T"; echo $?
  done
}

function help {     # Prints help
    echo "Usage: $0 <task> <args>"
    echo "Execute a task with the specified arguments."
    echo "By adding 'alias run=./Taskfile' you can then call it as 'run <task> <args>"
    echo
    echo "Tasks:"
    grep '^function .* #.* ' Taskfile | # Start with function and has # somewhere
      cut -d' ' -f 2- |                 # Remove the word 'function'
      tr -d '{' |                       # Remove '{}'
      sed 's/^/  /g' |                  # Indent by two spaces
      column --table --separator '#'    # column it using # as the separator
}

${@:-help}
