#!/bin/bash

CFLAGS="-g3 -Wall -Wextra -Wconversion -Wdouble-promotion
     -Wno-unused-parameter -Wno-unused-function -Wno-sign-conversion
     -fsanitize=undefined -fsanitize-undefined-trap-on-error -Wno-missing-braces"

CRFLAGS="-O3 -Wall -Wextra -Wconversion -Wdouble-promotion
     -Wno-unused-parameter -Wno-unused-function -Wno-sign-conversion
     -Wno-missing-braces"

CSFLAGS="-Os -Wall -Wextra -Wconversion -Wdouble-promotion
     -Wno-unused-parameter -Wno-unused-function -Wno-sign-conversion
     -Wno-missing-braces -ffunction-sections -fdata-sections -Wl,--gc-sections"
function clean {    # Clean things
    rm lex.yy.c lcs.tab.c lcs lcs.tab.h
}

function commonbuild {

  xxd -i ./libinc.h > libinc.c
  flex lcs.l
  bison -d lcs.y
  gcc $1 lcs.tab.c lex.yy.c visit.c main.c -o lcs
}
function build {    # Build debug
  commonbuild $CFLAGS
}
function buildr {    # Build speed
  commonbuild $CRFLAGS
}
function builds {    # Build size
  commonbuild $CSFLAGS
  strip -s -R .comment -R .gnu.version --strip-unneeded ./lcss
}

function run {    # Runs something
  build
  ./lcs Hello.cs
}

function help {     # Prints help
    echo "Usage: $0 <task> <args>"
    echo "Execute a task with the specified arguments."
    echo "By adding 'alias run=./Taskfile' you can then call it as 'run <task> <args>"
    echo
    echo "Tasks:"
    grep '^function .* #.* ' Taskfile | # Start with function and has # somewhere
      cut -d' ' -f 2- |                 # Remove the word 'function'
      tr -d '{' |                       # Remove '{}'
      sed 's/^/  /g' |                  # Indent by two spaces
      column --table --separator '#'    # column it using # as the separator
}

${@:-help}
